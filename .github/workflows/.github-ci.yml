# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ cicd_configuration, dev, build_coalign_function ]
  pull_request:
    branches: [ cicd_configuration, dev, build_coalign_function ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  run-code:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3




      # Runs a set of commands using the runners shell
      - name: Generate forward model and data slices
        env:
          ACTIONS_RUNNER_HOOK_JOB_STARTED: /Users/crura/Documents/bin/ssw
        run: |
          source /Users/crura/miniconda3/etc/profile.d/conda.sh &&
          conda init bash &&
          conda activate test_env &&
          python3 -m venv env &&
          source env/bin/activate &&
          pip install -r requirements.txt &&
          git_repo=$(git rev-parse --show-toplevel) &&
          (echo "ssw_path" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/string/strjustify.pro'" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/system/strrep_logenv.pro'" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/string/prstr.pro'" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/genutil/uniqo.pro'" &&
          echo "ssw_path, '/Users/crura/SSW/gen'" &&
          echo "ssw_path, '/Users/crura/SSW/hinode'" &&
          echo "ssw_path, '/Users/crura/SSW/offline'" &&
          echo "ssw_path, '/Users/crura/SSW/proba2'" &&
          echo "ssw_path, '/Users/crura/SSW/sdo'" &&
          echo "ssw_path, '/Users/crura/SSW/site'" &&
          echo "ssw_path, '/Users/crura/SSW/so'" &&
          echo "ssw_path, '/Users/crura/SSW/soho'" &&
          echo "ssw_path, '/Users/crura/SSW/stereo'" &&
          echo "ssw_path, '/Users/crura/SSW/trace'" &&
          echo "ssw_path, '//Users/crura/SSW/vobs'" &&
          echo "ssw_path, '/Users/crura/SSW/packages'" &&
          echo ".compile -v '/Users/crura/Desktop/Research/idlroutines/download.pro'" &&
          echo ".compile -v '/Users/crura/SSW/packages/forward/idl/DEFAULTS/for_settingdefaults.pro'" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/util/default.pro'" &&
          echo ".compile -v '/Users/crura/IDLWorkspace/Default/linspace.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/write_psi_image_as_fits.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/write_psi_fits.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/write_psi_mlso_fits.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/rtp2xyz.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/repstr.pro'" &&
          echo ".compile -v '$git_repo/generate_forward_model.pro'" &&
          echo ".compile -v '$git_repo/get_fordump.pro'" &&
          echo ".compile -v '$git_repo/image_coalignment.pro'" &&
          echo ".compile -v '$git_repo/save_parameters.pro'" &&
          echo ".compile -v '$git_repo/run_code.pro'" &&
          echo "run_code" &&
          cat) |
          /Users/crura/Documents/bin/ssw
          deactivate


      # Runs a set of commands using the runners shell
      - name: Run QRaFT
        env:
          ACTIONS_RUNNER_HOOK_JOB_STARTED: /Users/crura/Documents/bin/ssw
        run: |
          source /Users/crura/miniconda3/etc/profile.d/conda.sh &&
          conda init bash &&
          conda activate test_env &&
          python3 -m venv env &&
          source env/bin/activate &&
          pip install -r requirements.txt &&
          git_repo=$(git rev-parse --show-toplevel) &&
          mkdir -p $git_repo/Output/QRaFT_Results &&
          cd $git_repo/QRaFT &&
          (echo "ssw_path" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/string/strjustify.pro'" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/system/strrep_logenv.pro'" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/string/prstr.pro'" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/genutil/uniqo.pro'" &&
          echo "ssw_path, '/Users/crura/SSW/gen'" &&
          echo "ssw_path, '/Users/crura/SSW/hinode'" &&
          echo "ssw_path, '/Users/crura/SSW/offline'" &&
          echo "ssw_path, '/Users/crura/SSW/proba2'" &&
          echo "ssw_path, '/Users/crura/SSW/sdo'" &&
          echo "ssw_path, '/Users/crura/SSW/site'" &&
          echo "ssw_path, '/Users/crura/SSW/so'" &&
          echo "ssw_path, '/Users/crura/SSW/soho'" &&
          echo "ssw_path, '/Users/crura/SSW/stereo'" &&
          echo "ssw_path, '/Users/crura/SSW/trace'" &&
          echo "ssw_path, '//Users/crura/SSW/vobs'" &&
          echo "ssw_path, '/Users/crura/SSW/packages'" &&
          echo ".compile -v '/Users/crura/Desktop/Research/idlroutines/download.pro'" &&
          echo ".compile -v '/Users/crura/SSW/packages/forward/idl/DEFAULTS/for_settingdefaults.pro'" &&
          echo ".compile -v '/Users/crura/SSW/gen/idl/util/default.pro'" &&
          echo ".compile -v '/Users/crura/IDLWorkspace/Default/linspace.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/write_psi_image_as_fits.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/write_psi_fits.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/write_psi_mlso_fits.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/rtp2xyz.pro'" &&
          echo ".compile -v '$git_repo/IDL_Scripts/repstr.pro'" &&
          echo ".compile -v '$git_repo/get_fordump.pro'" &&
          echo ".compile -v '$git_repo/image_coalignment.pro'" &&
          echo ".compile -v '$git_repo/save_parameters.pro'" &&
          echo ".compile -v '$git_repo/generate_forward_model.pro'" &&
          echo ".compile -v '$git_repo/run_code.pro'" &&
          echo ".compile -v '$git_repo/QRaFT/open_PSI.pro'" &&
          echo ".compile -v '$git_repo/QRaFT/QRaFT_PSI.pro'" &&
          echo "script4, '$git_repo/Output/fits_images/', '$git_repo/Output/QRaFT_Results/',  err_arr_COR1,  err_arr_LOS_COR1, err_arr_FORWARD,  err_arr_LOS_FORWARD,  err_arr_rnd, L_COR1, L_FORWARD, /manual" &&
          echo "script3, '$git_repo/Output/fits_images/', '$git_repo/Output/QRaFT_Results/',  err_arr_MLSO,  err_arr_LOS_MLSO, err_arr_FORWARD,  err_arr_LOS_FORWARD,  err_arr_rnd, L_MLSO, L_FORWARD, /manual" &&
          cat) |
          /Users/crura/Documents/bin/ssw
          deactivate

      - uses: actions/upload-artifact@v3
        with:
          name: output-fits-images
          path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Output/fits_images

      - uses: actions/upload-artifact@v3
        with:
          name: Upload QRaFT Data
          path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Output/QRaFT_Results

      - name: Plot Figures for Paper

        run: |
          source /Users/crura/miniconda3/etc/profile.d/conda.sh &&
          conda init bash &&
          conda activate test_env &&
          python3 -m venv env &&
          source env/bin/activate &&
          pip install -r requirements.txt &&
          python Python_Scripts/new_plot_paper_figures.py
          python Python_Scripts/calculate_KDE_statistics.py
          deactivate

      - uses: actions/upload-artifact@v3
        with:
          name: output-plots
          path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Output/Plots
          retention-days: 30

  #
  # Python-build:
  #   needs: IDL-build
  #   runs-on: self-hosted
  #
  #   steps:
  #     - uses: actions/checkout@v3
  #
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: my-artifact
  #         path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Data
  #
  #     - name: Integrate Data Slices and Generate LOS Data
  #
  #       run: |
  #         source /Users/crura/miniconda3/etc/profile.d/conda.sh &&
  #         conda init bash &&
  #         conda activate test_env &&
  #         python Python_Scripts/integrate.py
  #
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: python-plots
  #         path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Data/Integrated_Parameters
  #
  #
  # save-parameters:
  #   # The type of runner that the job will run on
  #   needs: Python-build
  #   runs-on: self-hosted
  #
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3
  #
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: my-artifact
  #         path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Data
  #
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: python-plots
  #         path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Data/Integrated_Parameters
  #
  #
  #
  #     # Runs a set of commands using the runners shell
  #     - name: Save Model Parameters
  #       env:
  #         ACTIONS_RUNNER_HOOK_JOB_STARTED: /Users/crura/Documents/bin/ssw
  #       run: |
  #         (echo "ssw_path" &&
  #         echo ".compile -v '/Users/crura/SSW/gen/idl/string/strjustify.pro'" &&
  #         echo ".compile -v '/Users/crura/SSW/gen/idl/system/strrep_logenv.pro'" &&
  #         echo ".compile -v '/Users/crura/SSW/gen/idl/string/prstr.pro'" &&
  #         echo ".compile -v '/Users/crura/SSW/gen/idl/genutil/uniqo.pro'" &&
  #         echo "ssw_path, '/Users/crura/SSW/gen'" &&
  #         echo "ssw_path, '/Users/crura/SSW/hinode'" &&
  #         echo "ssw_path, '/Users/crura/SSW/offline'" &&
  #         echo "ssw_path, '/Users/crura/SSW/proba2'" &&
  #         echo "ssw_path, '/Users/crura/SSW/sdo'" &&
  #         echo "ssw_path, '/Users/crura/SSW/site'" &&
  #         echo "ssw_path, '/Users/crura/SSW/so'" &&
  #         echo "ssw_path, '/Users/crura/SSW/soho'" &&
  #         echo "ssw_path, '/Users/crura/SSW/stereo'" &&
  #         echo "ssw_path, '/Users/crura/SSW/trace'" &&
  #         echo "ssw_path, '//Users/crura/SSW/vobs'" &&
  #         echo "ssw_path, '/Users/crura/SSW/packages'" &&
  #         echo ".compile -v '/Users/crura/Desktop/Research/idlroutines/download.pro'" &&
  #         echo ".compile -v '/Users/crura/SSW/packages/forward/idl/DEFAULTS/for_settingdefaults.pro'" &&
  #         echo ".compile -v '/Users/crura/SSW/gen/idl/util/default.pro'" &&
  #         echo ".compile -v '/Users/crura/IDLWorkspace/Default/linspace.pro'" &&
  #         git_repo=$(git rev-parse --show-toplevel) &&
  #         echo ".compile -v '$git_repo/IDL_Scripts/write_psi_image_as_fits.pro'" &&
  #         echo ".compile -v '$git_repo/IDL_Scripts/write_psi_fits.pro'" &&
  #         echo ".compile -v '$git_repo/IDL_Scripts/write_psi_mlso_fits.pro'" &&
  #         echo ".compile -v '$git_repo/IDL_Scripts/rtp2xyz.pro'" &&
  #         echo ".compile -v '$git_repo/generate_forward_model.pro'" &&
  #         echo ".compile -v '$git_repo/get_fordump.pro'" &&
  #         echo ".compile -v '$git_repo/image_coalignment.pro'" &&
  #         echo ".compile -v '$git_repo/save_parameters.pro'" &&
  #         echo "image_coalignment()" &&
  #         echo "save_parameters()" &&
  #         cat) |
  #         /Users/crura/Documents/bin/ssw
  #
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: output-data
  #         path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Output
  #
  #
  # unit-test:
  #   needs: save-parameters
  #   runs-on: self-hosted
  #
  #   steps:
  #     - uses: actions/checkout@v3
  #
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: output-data
  #         path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Output
  #
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: my-artifact
  #         path: /Users/crura/Desktop/Research/github/actions-runner/_work/Image-Coalignment/Image-Coalignment/Data
  #
  #     - name: Perform Unit Tests
  #
  #       run: |
  #         source /Users/crura/miniconda3/etc/profile.d/conda.sh &&
  #         conda init bash &&
  #         conda activate test_env &&
  #         cd Python_Scripts
  #         python -m unittest
